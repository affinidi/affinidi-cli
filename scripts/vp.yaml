# ~~ Linted by affinidi-service-ts. Each change is linted and the file content is updated accordingly.
# ~~
# ~~ Notes:
# ~~ 1. This file is linted and fixed/normalized on projen run.
# ~~ 2. Errors (responses with HTTP status codes equal or grater than 400) shall be configured in error-catalog.yml.
# ~~ 3. More info: https://gitlab.com/affinidi/foundational/genesis/projen/affinidi-service-ts/-/blob/main/ARCHITECTURE.md#openapi
# ~~
openapi: 3.0.3
info:
  title: OidcVpAdapterBackend
  version: 1.0.0
  description: >
    Affinidi OIDC VP Adapter Backend


    An authorization token is necessary to create or obtain a project Access
    Token and access Admin APIs. Follow these step-by-step
    [instructions](https://lemmatree.atlassian.net/wiki/spaces/NETCORE/pages/2735317648020/ASA+Developer+Flow#Instructions-on-how-to-create-the-Project.)
    to set up an authorization token
  contact:
    name: nucleus
    email: nucleus.team@affinidi.com
servers:
  - url: /
tags:
  - name: configuration
    description: Administering Configuration Management
  - name: consent
    description: Consent Flow
  - name: cors
    description: CORS Definitions
  - name: session
    description: Login Session
  - name: group
    description: Permission Groups to manage user access
  - name: idp
    description: idp endpoints for login
security: []
x-amazon-apigateway-request-validators:
  basic:
    validateRequestBody: true
    validateRequestParameters: true
x-amazon-apigateway-request-validator: basic
components:
  securitySchemes:
    AwsSigV4:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: awsSigv4
    ApiKey:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-api-key-source: HEADER
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ConsumerTokenAuth:
      type: apiKey
      name: authorization
      in: header
    UserTokenAuth:
      type: apiKey
      name: authorization
      in: header
    ProjectTokenAuth:
      type: apiKey
      name: authorization
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        type: request
        authorizerUri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:792104784284:function:iam-dev-ProjectTokenAuthorizerC83BEF45-elvJgVdbp078:live-alias/invocations
        authorizerResultTtlInSeconds: 0
  headers:
    Access-Control-Allow-Origin:
      schema:
        type: string
    Access-Control-Allow-Methods:
      schema:
        type: string
    Access-Control-Allow-Headers:
      schema:
        type: string
  requestBodies:
    LoginSessionForIdp:
      description: LoginSessionForIdp
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginSessionForIDPInput'
    LoginSessionAcceptResponse:
      description: LoginSessionAcceptResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginSessionAcceptResponseInput'
    LoginSessionRejectResponse:
      description: LoginSessionRejectResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginSessionRejectResponseInput'
    CreateLoginConfigurations:
      description: CreateLoginConfigurations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateLoginConfigurationInput'
          examples:
            Default:
              $ref: '#/components/examples/CreateLoginConfigurationInput'
            Full:
              $ref: '#/components/examples/CreateLoginConfigurationInputFull'
    UpdateLoginConfigurationsById:
      description: UpdateLoginConfigurationsById
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLoginConfigurationInput'
          examples:
            Default:
              $ref: '#/components/examples/UpdateLoginConfigurationInput'
    CreateGroup:
      description: CreateGroup
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateGroupInput'
    AddUserToGroup:
      description: AddUserToGroup
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddUserToGroupInput'
    RemoveUserFromGroup:
      description: Remove user from group
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RemoveUserFromGroupInput'
  responses:
    CORSResponse:
      description: Default response for CORS Method
      content:
        application/json:
          examples: {}
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
    LoginSessionForIdp:
      description: Login Session Created
      headers:
        Access-Control-Allow-Origin: &ref_0
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods: &ref_1
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers: &ref_2
          $ref: '#/components/headers/Access-Control-Allow-Headers'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginSessionForIDPOutput'
    LoginSessionAcceptResponse:
      description: Response Accepted
      headers:
        Access-Control-Allow-Origin: *ref_0
        Access-Control-Allow-Methods: *ref_1
        Access-Control-Allow-Headers: *ref_2
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginSessionAcceptResponseOutput'
    LoginSessionRejectResponse:
      description: Response Declined
      headers:
        Access-Control-Allow-Origin: *ref_0
        Access-Control-Allow-Methods: *ref_1
        Access-Control-Allow-Headers: *ref_2
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginSessionRejectResponseOutput'
    ListLoginConfigurations:
      description: ListLoginConfigurationOutput
      headers:
        Access-Control-Allow-Origin: *ref_0
        Access-Control-Allow-Methods: *ref_1
        Access-Control-Allow-Headers: *ref_2
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListLoginConfigurationOutput'
          examples:
            Default:
              $ref: '#/components/examples/ListLoginConfigurationOutput'
    CreateLoginConfigurations:
      description: Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateLoginConfigurationOutput'
          examples:
            Default:
              $ref: '#/components/examples/CreateLoginConfigurationOutput'
    GetLoginConfigurationsById:
      description: GetLoginConfigurationOutput
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetLoginConfigurationOutput'
          examples:
            Default:
              $ref: '#/components/examples/ConfigurationObject'
    UpdateLoginConfigurationsById:
      description: UpdateLoginConfigurationOutput
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLoginConfigurationOutput'
          examples:
            Default:
              $ref: '#/components/examples/ConfigurationObject'
    ListGroups:
      description: Ok
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GroupsList'
    CreateGroup:
      description: Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GroupDto'
    GetGroupById:
      description: Ok
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GroupDto'
    ListGroupUserMappings:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GroupUserMappingsList'
    AddUserToGroup:
      description: Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GroupUserMappingDto'
    GetClientMetadataByClientId:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginConfigurationClientMetadata'
    JsonWebKeySet:
      description: Successful response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JsonWebKey'
    OIDCConfiguration:
      description: Successful response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OIDCConfig'
    OAuth2Token:
      description: Successful response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OAuth2Token'
    UserInfo:
      description: Successful response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUserInfo'
    LoginSessionForIdpForbiddenError:
      description: ForbiddenError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionForbiddenError'
    LoginSessionAcceptResponseBadRequestError:
      description: BadRequestError
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/InvalidParameterError'
              - $ref: '#/components/schemas/VPTokenValidationError'
    ListLoginConfigurationsBadRequestError:
      description: BadRequestError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
    ListLoginConfigurationsForbiddenError:
      description: ForbiddenError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionForbiddenError'
    CreateLoginConfigurationsBadRequestError:
      description: BadRequestError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
    CreateLoginConfigurationsForbiddenError:
      description: ForbiddenError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionForbiddenError'
    CreateLoginConfigurationsFailedDependencyError:
      description: FailedDependencyError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCreationError'
    GetLoginConfigurationsByIdBadRequestError:
      description: BadRequestError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
    GetLoginConfigurationsByIdForbiddenError:
      description: ForbiddenError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionForbiddenError'
    UpdateLoginConfigurationsByIdBadRequestError:
      description: BadRequestError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
    UpdateLoginConfigurationsByIdForbiddenError:
      description: ForbiddenError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionForbiddenError'
    DeleteLoginConfigurationsByIdBadRequestError:
      description: BadRequestError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
    DeleteLoginConfigurationsByIdForbiddenError:
      description: ForbiddenError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionForbiddenError'
    GetClientMetadataByClientIdBadRequestError:
      description: BadRequestError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
    GetClientMetadataByClientIdNotFoundError:
      description: NotFoundError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    ListGroupsBadRequestError:
      description: BadRequestError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
    ListGroupsForbiddenError:
      description: ForbiddenError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionForbiddenError'
    ListGroupsNotFoundError:
      description: NotFoundError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    CreateGroupBadRequestError:
      description: BadRequestError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
    CreateGroupForbiddenError:
      description: ForbiddenError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionForbiddenError'
    CreateGroupConflictError:
      description: ConflictError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GroupsPerUserLimitExceededError'
    GetGroupByIdBadRequestError:
      description: BadRequestError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
    GetGroupByIdForbiddenError:
      description: ForbiddenError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionForbiddenError'
    GetGroupByIdNotFoundError:
      description: NotFoundError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    DeleteGroupBadRequestError:
      description: BadRequestError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
    DeleteGroupForbiddenError:
      description: ForbiddenError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionForbiddenError'
    ListGroupUserMappingsBadRequestError:
      description: BadRequestError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
    ListGroupUserMappingsForbiddenError:
      description: ForbiddenError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionForbiddenError'
    ListGroupUserMappingsNotFoundError:
      description: NotFoundError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    AddUserToGroupBadRequestError:
      description: BadRequestError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
    AddUserToGroupForbiddenError:
      description: ForbiddenError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionForbiddenError'
    AddUserToGroupNotFoundError:
      description: NotFoundError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    RemoveUserFromGroupBadRequestError:
      description: BadRequestError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
    RemoveUserFromGroupForbiddenError:
      description: ForbiddenError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionForbiddenError'
    RemoveUserFromGroupNotFoundError:
      description: NotFoundError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
  schemas:
    ServiceErrorResponse:
      type: object
      additionalProperties: false
      description: Service Error Response
      properties:
        debugId:
          type: string
          format: uuid
          description: unique id for correlating this specific error to logs
        name:
          type: string
          description: name of the error
        code:
          type: string
          description: backwards compatible Affinidi error code
        details:
          type: array
          description: error details
          items:
            type: object
            additionalProperties: false
            properties:
              issue:
                type: string
                description: issue
              field:
                type: string
                description: fields
              value:
                type: string
                description: value
              location:
                type: string
                description: location
            required:
              - issue
      required:
        - debugId
        - name
        - code
    RedirectResponse:
      type: object
      additionalProperties: false
      description: Redirect Response
      properties:
        type:
          type: string
          description: type
          enum:
            - REDIRECT_RESPONSE
        to:
          type: string
          format: url
          description: URL to redirect to
      required:
        - type
        - to
    ListLoginConfigurationOutput:
      type: object
      additionalProperties: false
      properties:
        configurations:
          type: array
          items:
            $ref: '#/components/schemas/LoginConfigurationObject'
      required:
        - configurations
    CreateLoginConfigurationInput:
      type: object
      properties:
        name:
          type: string
          description: User defined login configuration name
        redirectUris:
          type: array
          description: OAuth 2.0 Redirect URIs
          items:
            type: string
        vpDefinition:
          type: string
          description: VP definition in JSON stringify format
        presentationDefinition:
          type: object
          description: Presentation Definition
        idTokenMapping:
          $ref: '#/components/schemas/IdTokenMapping'
        clientMetadata:
          $ref: '#/components/schemas/LoginConfigurationClientMetadata'
        claimFormat:
          description: ID token claims output format. Default is array.
          type: string
          enum:
            - array
            - map
        scope:
          type: string
          description: List of groups separated by space
        tokenEndpointAuthMethod:
          $ref: '#/components/schemas/TokenEndpointAuthMethod'
      required:
        - name
        - redirectUris
    CreateLoginConfigurationOutput:
      type: object
      additionalProperties: false
      properties:
        ari:
          type: string
          description: Configuration ari
        projectId:
          type: string
          description: Project id
        id:
          type: string
          description: Configuration id
        name:
          type: string
          description: User defined login configuration name
        auth:
          type: object
          additionalProperties: false
          description: OIDC Auth Credentials
          properties:
            clientId:
              type: string
              description: OAuth 2.0 Client ID
            clientSecret:
              type: string
              description: OAuth 2.0 Client Secret
            scope:
              type: string
              description: OAuth 2.0 Client Scope
            issuer:
              type: string
              description: Issuer URL
          required:
            - clientId
        redirectUris:
          type: array
          items:
            type: string
          description: OAuth 2.0 Redirect URIs
        clientMetadata:
          $ref: '#/components/schemas/LoginConfigurationClientMetadata'
        creationDate:
          type: string
          description: OAuth 2.0 Client Creation Date
      required:
        - ari
        - id
        - name
        - projectId
        - auth
        - redirectUris
        - clientMetadata
        - creationDate
    GetLoginConfigurationOutput:
      $ref: '#/components/schemas/LoginConfigurationObject'
    UpdateLoginConfigurationInput:
      type: object
      properties:
        name:
          type: string
          description: User defined login configuration name
        redirectUris:
          type: array
          description: OAuth 2.0 Redirect URIs
          items:
            type: string
        clientSecret:
          type: string
          description: OAuth2 client secret
        vpDefinition:
          type: string
          description: VP definition in JSON stringify format
        presentationDefinition:
          type: object
          description: Presentation Definition
        idTokenMapping:
          $ref: '#/components/schemas/IdTokenMapping'
        clientMetadata:
          $ref: '#/components/schemas/LoginConfigurationClientMetadata'
        tokenEndpointAuthMethod:
          $ref: '#/components/schemas/TokenEndpointAuthMethod'
    UpdateLoginConfigurationOutput:
      $ref: '#/components/schemas/LoginConfigurationObject'
    LoginSessionDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          description: Session primary identifier
        authorizationRequest:
          type: object
          additionalProperties: false
          properties:
            state:
              type: string
              description: State parameter
            presentationDefinition:
              type: string
              description: >-
                Presentation Definition to ask from the user. In JSON Stringify
                format.
            ari:
              type: string
              description: ARI is used for analytics proposals.
            clientId:
              type: string
              description: clientId used for detect origin.
          required:
            - state
            - presentationDefinition
      required:
        - id
        - authorizationRequest
    LoginSessionForIDPInput:
      type: object
      additionalProperties: false
      description: Input for Creating a Login Session
      properties:
        loginChallenge:
          type: string
          description: IDP Login Challenge to Associate the Session with
        clientId:
          type: string
          description: IDP client id to Associate the Session with
      required:
        - loginChallenge
        - clientId
    LoginSessionForIDPOutput:
      $ref: '#/components/schemas/LoginSessionDto'
    LoginSessionAcceptResponseInput:
      type: object
      additionalProperties: true
      description: >-
        Authorization Response per OpenID for Verifiable Presentations
        Specification
    LoginSessionAcceptResponseOutput:
      type: object
      additionalProperties: true
      description: Direct Post Response URI endpoint result
    LoginSessionRejectResponseInput:
      type: object
      additionalProperties: true
      description: >-
        Authorization Response per OpenID for Verifiable Presentations
        Specification
      properties:
        error:
          type: string
          description: >-
            The error should follow the OAuth2 error format (e.g.
            invalid_request, login_required). Defaults to request_denied
        errorDescription:
          type: string
          description: Description of the error in a human readable format
        state:
          type: string
          description: Random state associated to the Session
      required:
        - state
    LoginSessionRejectResponseOutput:
      type: object
      additionalProperties: true
      description: Direct Post Response URI endpoint result
    LoginConfigurationObject:
      type: object
      additionalProperties: true
      properties:
        ari:
          type: string
          description: Configuration ari
        id:
          type: string
          description: Configuration id
        projectId:
          type: string
          description: Project id
        name:
          type: string
          description: User defined login configuration name
        redirectUris:
          type: array
          items:
            type: string
          description: OAuth 2.0 Redirect URIs
        scope:
          type: string
          description: OAuth 2.0 Client Scope
        clientId:
          type: string
          description: OAuth 2.0 Client ID
        creationDate:
          type: string
          description: OAuth 2.0 Client Creation Date
        vpDefinition:
          type: string
          description: VP definition in JSON stringify format
        presentationDefinition:
          type: object
          description: Presentation Definition
        idTokenMapping:
          $ref: '#/components/schemas/IdTokenMapping'
        clientMetadata:
          $ref: '#/components/schemas/LoginConfigurationClientMetadata'
      required:
        - ari
        - id
        - name
        - clientId
        - vpDefinition
        - projectId
        - creationDate
        - idTokenMapping
        - clientMetadata
    IdTokenMapping:
      minItems: 1
      items:
        type: object
        additionalProperties: false
        properties:
          sourceField:
            type: string
            description: Name(path) of the corresponding field in the vp_token
          idTokenClaim:
            type: string
            description: Name of the corresponding field in the id_token
        required:
          - sourceField
          - idTokenClaim
      type: array
      description: Fields name/path mapping between the vp_token and the id_token
    CreateGroupInput:
      type: object
      additionalProperties: false
      properties:
        groupName:
          type: string
          pattern: ^[a-z_]+$
          maxLength: 24
          description: name of the group for users, used as an id
      required:
        - groupName
    GroupDto:
      type: object
      additionalProperties: false
      properties:
        ari:
          type: string
          description: Group ari
        projectId:
          type: string
          description: Project id
        groupName:
          type: string
          description: name of the group, identifier within a project
        creationDate:
          type: string
          description: Group creation date
      required:
        - ari
        - projectId
        - groupName
        - creationDate
    GroupUserMappingDto:
      type: object
      additionalProperties: false
      properties:
        userId:
          type: string
          description: Unique identifier of the user
        addedAt:
          type: string
          description: Group to user mapping creation date
      required:
        - userId
        - addedAt
    AddUserToGroupInput:
      type: object
      description: >-
        input used to create a user group mapping or in other words add user to
        group
      properties:
        userId:
          type: string
          description: Unique identifier of the user
      required:
        - userId
    RemoveUserFromGroupInput:
      type: object
      description: >-
        input used to create a user group mapping or in other words add user to
        group
      properties:
        userId:
          type: string
          description: Unique identifier of the user
      required:
        - userId
    GroupsList:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupDto'
    GroupUserMappingsList:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/GroupUserMappingDto'
    LoginConfigurationClientMetadata:
      type: object
      additionalProperties: true
      description: login configuration client metadata
      properties:
        name:
          type: string
          description: application name that will be displayed in consent page
        origin:
          type: string
          description: origin url that will be displayed in consent page
        logo:
          type: string
          description: logo url that will be displayed in consent page
      required:
        - name
        - origin
        - logo
    TokenEndpointAuthMethod:
      enum:
        - client_secret_basic
        - client_secret_post
        - none
      type: string
      description: >
        Requested Client Authentication method for the Token Endpoint. The
        options are: `client_secret_post`: (default) Send client_id and
        client_secret as application/x-www-form-urlencoded in the HTTP body.
        `client_secret_basic`: Send client_id and client_secret as
        application/x-www-form-urlencoded encoded in the HTTP Authorization
        header. `none`: For public clients (native/mobile apps) which can not
        have secret.
    InvalidParameterError:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          enum:
            - InvalidParameterError
        message:
          type: string
          enum:
            - 'Invalid parameter: ${param}.'
        httpStatusCode:
          type: number
          enum:
            - 400
        traceId:
          type: string
        details:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              issue:
                type: string
              field:
                type: string
              value:
                type: string
              location:
                type: string
            required:
              - issue
      required:
        - name
        - message
        - httpStatusCode
        - traceId
    NotFoundError:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          enum:
            - NotFoundError
        message:
          type: string
          enum:
            - 'Not found: ${param}.'
        httpStatusCode:
          type: number
          enum:
            - 404
        traceId:
          type: string
        details:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              issue:
                type: string
              field:
                type: string
              value:
                type: string
              location:
                type: string
            required:
              - issue
      required:
        - name
        - message
        - httpStatusCode
        - traceId
    JsonWebKey:
      type: object
      properties:
        keys:
          description: >
            The value of the "keys" parameter is an array of JSON Web Key (JWK)
            values.  By default, the order of the JWK values within the array
            does not imply an  order of preference among them, although
            applications of JWK Sets can choose  to assign a meaning to the
            order for their purposes, if desired.
          type: array
          items:
            type: object
            properties:
              alg:
                description: >
                  The "alg" (algorithm) parameter identifies the algorithm
                  intended for use  with the key. The values used should either
                  be registered in the IANA  "JSON Web Signature and Encryption
                  Algorithms" registry established  by [JWA] or be a value that
                  contains a Collision- Resistant Name.
                type: string
              crv:
                type: string
              d:
                type: string
              dp:
                type: string
              dq:
                type: string
              e:
                type: string
              k:
                type: string
              kid:
                type: string
                description: >
                  The "kid" (key ID) parameter is used to match a specific key.
                  This is used,  for instance, to choose among a set of keys
                  within a JWK Set during key  rollover. The structure of the
                  "kid" value is unspecified. When "kid"  values are used within
                  a JWK Set, different keys within the JWK Set SHOULD  use
                  distinct "kid" values. (One example in which different keys
                  might use  the same "kid" value is if they have different
                  "kty" (key type) values but  are considered to be equivalent
                  alternatives by the application using them.)  The "kid" value
                  is a case-sensitive string.
              kty:
                type: string
                description: >
                  The "kty" (key type) parameter identifies the cryptographic
                  algorithm family  used with the key, such as "RSA" or "EC".
                  "kty" values should either be  registered in the IANA "JSON
                  Web Key Types" registry established by [JWA]  or be a value
                  that contains a Collision- Resistant Name. The "kty" value  is
                  a case-sensitive string.
              'n':
                type: string
              p:
                type: string
              q:
                type: string
              qi:
                type: string
              use:
                type: string
                description: >
                  Use ("public key use") identifies the intended use of the
                  public key. The  "use" parameter is employed to indicate
                  whether a public key is used for  encrypting data or verifying
                  the signature on data. Values are commonly  "sig" (signature)
                  or "enc" (encryption).
              x:
                type: string
              x5c:
                description: >
                  The "x5c" (X.509 certificate chain) parameter contains a chain
                  of one  or more PKIX certificates [RFC5280]. The certificate
                  chain is represented  as a JSON array of certificate value
                  strings. Each string in the array is  a base64-encoded
                  (Section 4 of [RFC4648] -- not base64url-encoded) DER
                  [ITU.X690.1994] PKIX certificate value. The PKIX certificate
                  containing the  key value MUST be the first certificate.
                type: array
                items:
                  type: string
              'y':
                type: string
            required:
              - alg
              - kid
              - kty
              - use
              - x5c
    OIDCConfig:
      type: object
      properties:
        authorization_endpoint:
          description: OAuth 2.0 Authorization Endpoint URL
          type: string
        backchannel_logout_session_supported:
          description: >
            OpenID Connect Back-Channel Logout Session Required. Boolean value
            specifying whether the OP can pass a sid (session ID)  Claim in the
            Logout Token to identify the RP session with the OP. If  supported,
            the sid Claim is also included in ID Tokens issued by the OP
          type: boolean
        backchannel_logout_supported:
          description: >
            OpenID Connect Back-Channel Logout Supported. Boolean value
            specifying whether the OP supports  back-channel logout, with true
            indicating support.
          type: boolean
        claims_parameter_supported:
          description: >
            OpenID Connect Claims Parameter Parameter Supported Boolean value
            specifying whether the OP supports use  of the claims parameter,
            with true indicating support.
          type: boolean
        claims_supported:
          description: >
            OpenID Connect Supported Claims   JSON array containing a list of
            the Claim Names of the  Claims that the OpenID Provider MAY be able
            to supply  values for. Note that for privacy or other reasons,  this
            might not be an exhaustive list.
          type: array
          items:
            type: string
        code_challenge_methods_supported:
          description: >
            OAuth 2.0 PKCE Supported Code Challenge Methods JSON array
            containing a list of Proof Key for Code  Exchange (PKCE) [RFC7636]
            code challenge methods  supported by this authorization server.
          type: array
          items:
            type: string
        credentials_endpoint_draft_00:
          description: >
            OpenID Connect Verifiable Credentials Endpoint Contains the URL of
            the Verifiable Credentials Endpoint.
          type: string
        credentials_supported_draft_00:
          description: >
            OpenID Connect Verifiable Credentials Supported JSON array
            containing a list of the Verifiable  Credentials supported by this
            authorization server.
          type: array
          items:
            type: object
            properties:
              cryptographic_binding_methods_supported:
                type: array
                items:
                  type: string
              cryptographic_suites_supported:
                type: array
                items:
                  type: string
              format:
                type: string
              types:
                type: array
                items:
                  type: string
        end_session_endpoint:
          description: >
            OpenID Connect End-Session Endpoint URL at the OP to which an RP can
            perform  a redirect to request that the End-User be  logged out at
            the OP.
          type: string
        frontchannel_logout_session_supported:
          description: >
            OpenID Connect Front-Channel Logout Session Required Boolean value
            specifying whether the OP can pass iss  (issuer) and sid (session
            ID) query parameters to identify  the RP session with the OP when
            the frontchannel_logout_uri  is used. If supported, the sid Claim is
            also included in ID  Tokens issued by the OP.
          type: boolean
        frontchannel_logout_supported:
          description: >
            OpenID Connect Front-Channel Logout Supported Boolean value
            specifying whether the OP supports HTTP-based logout, with true
            indicating support.
          type: boolean
        grant_types_supported:
          description: >
            OAuth 2.0 Supported Grant Types JSON array containing a list of the
            OAuth 2.0 Grant Type values that this OP supports.
          type: array
          items:
            type: string
        id_token_signed_response_alg:
          description: |
            OpenID Connect Default ID Token Signing Algorithms
            Algorithm used to sign OpenID Connect ID Tokens.
          type: array
          items:
            type: string
        id_token_signing_alg_values_supported:
          description: >
            OpenID Connect Supported ID Token Signing Algorithms

            JSON array containing a list of the JWS signing algorithms  (alg
            values) supported by the OP for the ID Token to encode the Claims in
            a JWT.
          type: array
          items:
            type: string
        issuer:
          description: >
            OpenID Connect Issuer URL

            An URL using the https scheme with no query or fragment component
            that the OP asserts as its IssuerURL Identifier. If IssuerURL
            discovery  is supported , this value MUST be identical to the issuer
            value returned by WebFinger.  This also MUST be identical to the iss
            Claim value in ID Tokens issued from this IssuerURL.
          type: string
        jwks_uri:
          description: >
            OpenID Connect Well-Known JSON Web Keys URL

            URL of the OP's JSON Web Key Set [JWK] document. This contains the
            signing key(s) the RP  uses to validate signatures from the OP. The
            JWK Set MAY also contain the Server's  encryption key(s), which are
            used by RPs to encrypt requests to the Server. When both  signing
            and encryption keys are made available, a use (Key Use) parameter
            value is REQUIRED  for all keys in the referenced JWK Set to
            indicate each key's intended usage. Although some  algorithms allow
            the same key to be used for both signatures and encryption, doing so
            is  NOT RECOMMENDED, as it is less secure. The JWK x5c parameter MAY
            be used to provide X.509  representations of keys provided. When
            used, the bare key values MUST still be present and  MUST match
            those in the certificate.
          type: string
        registration_endpoint:
          description: |
            OpenID Connect Dynamic Client Registration Endpoint URL
          type: string
        request_object_signing_alg_values_supported:
          description: >
            OpenID Connect Supported Request Object Signing Algorithms

            JSON array containing a list of the JWS signing algorithms (alg
            values) supported by  the OP for Request Objects, which are
            described in Section 6.1 of  OpenID Connect Core 1.0 [OpenID.Core].
            These algorithms are used both when the  Request Object is passed by
            value (using the request parameter) and when it is  passed by
            reference (using the request_uri parameter).
          type: array
          items:
            type: string
        request_parameter_supported:
          description: >
            OpenID Connect Request Parameter Supported

            Boolean value specifying whether the OP supports use of the request
            parameter, with true indicating support.
          type: boolean
        request_uri_parameter_supported:
          description: >
            OpenID Connect Request URI Parameter Supported

            Boolean value specifying whether the OP supports use of the
            request_uri parameter, with true indicating support.
          type: boolean
        require_request_uri_registration:
          description: >
            OpenID Connect Requires Request URI Registration

            Boolean value specifying whether the OP requires any request_uri
            values used to be  pre-registered using the request_uris
            registration parameter.
          type: boolean
        response_modes_supported:
          description: >
            OAuth 2.0 Supported Response Modes

            JSON array containing a list of the OAuth 2.0 response_mode values
            that this OP supports.
          type: array
          items:
            type: string
        response_types_supported:
          description: >
            OAuth 2.0 Supported Response Types

            JSON array containing a list of the OAuth 2.0 response_type values
            that this OP supports.  Dynamic OpenID Providers MUST support the
            code, id_token, and the token id_token Response Type values.
          type: array
          items:
            type: string
        revocation_endpoint:
          description: |
            OAuth 2.0 Token Revocation URL
            URL of the authorization server's OAuth 2.0 revocation endpoint.
          type: string
        scopes_supported:
          description: >
            OAuth 2.0 Supported Scope Values

            JSON array containing a list of the OAuth 2.0 [RFC6749] scope values
            that this server supports.  The server MUST support the openid scope
            value. Servers MAY choose not to advertise  some supported scope
            values even when this parameter is used
          type: array
          items:
            type: string
        subject_types_supported:
          description: >
            OpenID Connect Supported Subject Types

            JSON array containing a list of the Subject Identifier types that
            this OP supports.  Valid types include pairwise and public.
          type: array
          items:
            type: string
        token_endpoint:
          description: OAuth 2.0 Token Endpoint URL
          type: string
        token_endpoint_auth_methods_supported:
          description: >
            OAuth 2.0 Supported Client Authentication Methods

            JSON array containing a list of Client Authentication methods
            supported by this Token Endpoint.  The options are
            client_secret_post, client_secret_basic, client_secret_jwt,  and
            private_key_jwt, as described in Section 9 of OpenID Connect Core
            1.0
          type: array
          items:
            type: string
        userinfo_endpoint:
          description: |
            OpenID Connect Userinfo URL
            URL of the OP's UserInfo Endpoint.
          type: string
        userinfo_signed_response_alg:
          description: |
            OpenID Connect User Userinfo Signing Algorithm
            Algorithm used to sign OpenID Connect Userinfo Responses.
          type: array
          items:
            type: string
        userinfo_signing_alg_values_supported:
          description: >
            OpenID Connect Supported Userinfo Signing Algorithm

            JSON array containing a list of the JWS [JWS] signing algorithms
            (alg values) [JWA]  supported by the UserInfo Endpoint to encode the
            Claims in a JWT [JWT].
          type: array
          items:
            type: string
      required:
        - authorization_endpoint
        - id_token_signed_response_alg
        - id_token_signing_alg_values_supported
        - issuer
        - jwks_uri
        - response_types_supported
        - subject_types_supported
        - token_endpoint
        - userinfo_signed_response_alg
    OAuth2Token:
      type: object
      properties:
        access_token:
          description: |
            The access token issued by the authorization server.
          type: string
        expires_in:
          description: >
            The lifetime in seconds of the access token.  For example, the value
            "3600" denotes that the access  token will expire in one hour from
            the time the response was generated.
          type: integer
        id_token:
          description: |
            To retrieve a refresh token request the id_token scope.
          type: integer
        refresh_token:
          description: >
            The refresh token, which can be used to obtain new access tokens.
            To retrieve it add the scope "offline" to your access token request.
          type: string
        scope:
          description: |
            The scope of the access token
          type: string
        token_type:
          description: |
            The type of the token issued
          type: string
    GetUserInfo:
      type: object
      properties:
        birthdate:
          description: >
            End-User's birthday, represented as an ISO 8601:2004 [ISO8601‑2004]
            YYYY-MM-DD format.  The year MAY be 0000, indicating that it is
            omitted. To represent only the year,  YYYY format is allowed. Note
            that depending on the underlying platform's date related  function,
            providing just year can result in varying month and day, so the
            implementers  need to take this factor into account to correctly
            process the dates.
          type: string
        email:
          description: >
            End-User's preferred e-mail address. Its value MUST conform to the
            RFC 5322 [RFC5322]  addr-spec syntax. The RP MUST NOT rely upon this
            value being unique, as discussed in Section 5.7.
          type: string
        email_verified:
          description: >
            True if the End-User's e-mail address has been verified; otherwise
            false. When this  Claim Value is true, this means that the OP took
            affirmative steps to ensure that  this e-mail address was controlled
            by the End-User at the time the verification was  performed. The
            means by which an e-mail address is verified is context-specific,
            and  dependent upon the trust framework or contractual agreements
            within which the parties  are operating.
          type: boolean
        family_name:
          description: >
            Surname(s) or last name(s) of the End-User. Note that in some
            cultures, people can have  multiple family names or no family name;
            all can be present, with the names being  separated by space
            characters.
          type: string
        gender:
          description: >
            End-User's gender. Values defined by this specification are female
            and male.  Other values MAY be used when neither of the defined
            values are applicable.
          type: string
        given_name:
          description: >
            Given name(s) or first name(s) of the End-User. Note that in some
            cultures,  people can have multiple given names; all can be present,
            with the names being  separated by space characters.
          type: string
        locale:
          description: >
            End-User's locale, represented as a BCP47 [RFC5646] language tag.
            This is  typically an ISO 639-1 Alpha-2 [ISO639‑1] language code in
            lowercase and an  ISO 3166-1 Alpha-2 [ISO3166‑1] country code in
            uppercase, separated by a dash.  For example, en-US or fr-CA. As a
            compatibility note, some implementations have  used an underscore as
            the separator rather than a dash, for example, en_US;  Relying
            Parties MAY choose to accept this locale syntax as well.
          type: string
        middle_name:
          description: >
            Middle name(s) of the End-User. Note that in some cultures, people
            can have  multiple middle names; all can be present, with the names
            being separated by  space characters. Also note that in some
            cultures, middle names are not used.
          type: string
        name:
          description: >
            End-User's full name in displayable form including all name parts,
            possibly  including titles and suffixes, ordered according to the
            End-User's locale and preferences.
          type: string
        nickname:
          description: >
            Casual name of the End-User that may or may not be the same as the
            given_name.  For instance, a nickname value of Mike might be
            returned alongside a given_name value of Michael.
          type: string
        phone_number:
          description: >
            End-User's preferred telephone number. E.164 [E.164] is RECOMMENDED
            as the format of this Claim,  for example, +1 (425) 555-1212 or +56
            (2) 687 2400. If the phone number contains an extension,  it is
            RECOMMENDED that the extension be represented using the RFC 3966
            [RFC3966] extension syntax,  for example, +1 (604)
            555-1234;ext=5678.
          type: string
        phone_number_verified:
          description: >
            True if the End-User's phone number has been verified; otherwise
            false. When this Claim  Value is true, this means that the OP took
            affirmative steps to ensure that this phone  number was controlled
            by the End-User at the time the verification was performed. The
            means  by which a phone number is verified is context-specific, and
            dependent upon the trust framework  or contractual agreements within
            which the parties are operating. When true, the phone_number  Claim
            MUST be in E.164 format and any extensions MUST be represented in
            RFC 3966 format.
          type: boolean
        picture:
          description: >
            URL of the End-User's profile picture. This URL MUST refer to an
            image file (for example, a PNG,  JPEG, or GIF image file), rather
            than to a Web page containing an image. Note that this URL SHOULD
            specifically reference a profile photo of the End-User suitable for
            displaying when describing the  End-User, rather than an arbitrary
            photo taken by the End-User.
          type: string
        preferred_username:
          description: >
            Non-unique shorthand name by which the End-User wishes to be
            referred to at the RP, such as  janedoe or j.doe. This value MAY be
            any valid JSON string including special characters  such as @, /, or
            whitespace.
          type: string
        profile:
          description: >
            URL of the End-User's profile page. The contents of this Web page
            SHOULD be about the End-User.
          type: string
        sub:
          description: |
            Subject - Identifier for the End-User at the IssuerURL.
          type: string
        updated_at:
          description: >
            Time the End-User's information was last updated. Its value is a
            JSON number  representing the number of seconds from
            1970-01-01T0:0:0Z as measured in UTC until the date/time.
          type: integer
        website:
          description: >
            URL of the End-User's Web page or blog. This Web page SHOULD contain
            information  published by the End-User or an organization that the
            End-User is affiliated with.
          type: string
        zoneinfo:
          description: >
            String from zoneinfo [zoneinfo] time zone database representing the
            End-User's  time zone. For example, Europe/Paris or
            America/Los_Angeles.
          type: string
    ErrorOAuth2:
      type: object
      properties:
        error:
          type: string
          description: Error
        error_debug:
          type: string
          description: Error Debug Information. Only available in dev mode.
        error_description:
          type: string
          description: Error Description
        error_hint:
          type: string
          description: Error Hint. Helps the user identify the error cause.
        status_code:
          type: string
          description: HTTP Status Code
      required:
        - error
        - error_description
        - status_code
    ResourceCreationError:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          enum:
            - ResourceCreationError
        message:
          type: string
          enum:
            - Failed to create resources.
        httpStatusCode:
          type: number
          enum:
            - 424
        traceId:
          type: string
        details:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              issue:
                type: string
              field:
                type: string
              value:
                type: string
              location:
                type: string
            required:
              - issue
      required:
        - name
        - message
        - httpStatusCode
        - traceId
    GroupsPerUserLimitExceededError:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          enum:
            - GroupsPerUserLimitExceededError
        message:
          type: string
          enum:
            - Amount of groups per user is limited.
        httpStatusCode:
          type: number
          enum:
            - 409
        traceId:
          type: string
        details:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              issue:
                type: string
              field:
                type: string
              value:
                type: string
              location:
                type: string
            required:
              - issue
      required:
        - name
        - message
        - httpStatusCode
        - traceId
    ActionForbiddenError:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          enum:
            - ActionForbiddenError
        message:
          type: string
          enum:
            - Principal can not execute action on given resource
        httpStatusCode:
          type: number
          enum:
            - 403
        traceId:
          type: string
        details:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              issue:
                type: string
              field:
                type: string
              value:
                type: string
              location:
                type: string
            required:
              - issue
      required:
        - name
        - message
        - httpStatusCode
        - traceId
    VPTokenValidationError:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          enum:
            - VPTokenValidationError
        message:
          type: string
          enum:
            - VP token validation ended with an error
        httpStatusCode:
          type: number
          enum:
            - 400
        traceId:
          type: string
        details:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              issue:
                type: string
              field:
                type: string
              value:
                type: string
              location:
                type: string
            required:
              - issue
      required:
        - name
        - message
        - httpStatusCode
        - traceId
  examples:
    ConfigurationObject:
      value:
        ari: ari:identity:...:28ed0f663884ff70bf3
        name: Reference App Client
        clientId: client-id here
        projectId: 8000c3a4-aa3b-4d14-9c9b-cddaa324c9e9
        creationDate: '2023-05-11T10:15:44Z'
        idTokenMapping:
          - sourceField: $.type
            idTokenClaim: type
          - sourceField: $.credentialSubject.email
            idTokenClaim: email
          - sourceField: $.credentialSubject.data.score
            idTokenClaim: vp_score
          - sourceField: $.credentialSubject.data.like
            idTokenClaim: vp_likes
        vpDefinition: >-
          {\"id\":\"vp_token_with_email_vc\",\"input_descriptors\":[{\"id\":\"email_vc\",\"name\":\"Email
          VC type\",\"purpose\":\"Check if VC type is
          correct\",\"constraints\":{\"fields\":[{\"path\":[\"$.type\"],\"filter\":{\"type\":\"array\",\"pattern\":\"Email\"}}]}},{\"id\":\"email_vc_data\",\"name\":\"Email
          VC data\",\"purpose\":\"Check if data contains necessary
          fields\",\"constraints\":{\"fields\":[{\"path\":[\"$.credentialSubject.email\"],\"purpose\":\"Email
          address\",\"filter\":{\"type\":\"string\"}}]}}]}
        presentationDefinition: |-
          {
            "id": "vp_token_with_email_vc",
            "input_descriptors": [
              {
                "id": "email_vc",
                "name": "EmailVC type",
                "purpose": "Check if VC type iscorrect",
                "constraints": {
                  "fields": [
                    {
                      "path": ["$.type"],
                      "filter": { "type": "array", "pattern": "Email" }
                    }
                  ]
                }
              },
              {
                "id": "email_vc_data",
                "name": "EmailVC data",
                "purpose": "Check if data contains necessary fields",
                "constraints": {
                  "fields": [
                    {
                      "path": ["$.credentialSubject.email"],
                      "purpose": "Email address",
                      "filter": { "type": "string" }
                    }
                  ]
                }
              }
            ]
          }
        id: c13de9cd6f19f28ed0f663884ff70bf3
        clientMetadata:
          name: insurance
          origin: https://insurance.com
          logo: https://insurance.com/logo.png
    CreateLoginConfigurationOutput:
      value:
        ari: ari:identity:...:28ed0f663884ff70bf3
        name: Reference App Client
        auth:
          clientId: 47d8ef82-edb4-4752-8a8d-e8bc8aad4b48
          clientSecret: '**************'
          issuer: http://affinidi.com
        projectId: 8000c3a4-aa3b-4d14-9c9b-cddaa324c9e9
        creationDate: '2023-05-11T10:15:44Z'
        redirectUris:
          - https://my-fancy-project.eu.auth0.com/login/callback
        id: c13de9cd6f19f28ed0f663884ff70bf3
        clientMetadata:
          name: insurance
          origin: https://insurance.com
          logo: https://insurance.com/logo.png
    CreateLoginConfigurationInput:
      value:
        name: Reference App Client
        redirectUris:
          - https://my-fancy-project.eu.auth0.com/login/callback
    CreateLoginConfigurationInputFull:
      value:
        name: Reference App Client
        redirectUris:
          - https://my-fancy-project.eu.auth0.com/login/callback
        idTokenMapping:
          - sourceField: $.type
            idTokenClaim: type
          - sourceField: $.credentialSubject.email
            idTokenClaim: email
          - sourceField: $.credentialSubject.data.score
            idTokenClaim: vp_score
          - sourceField: $.credentialSubject.data.like
            idTokenClaim: vp_likes
        vpDefinition: >-
          {\"id\":\"vp_token_with_email_vc\",\"input_descriptors\":[{\"id\":\"email_vc\",\"name\":\"Email
          VC type\",\"purpose\":\"Check if VC type is
          correct\",\"constraints\":{\"fields\":[{\"path\":[\"$.type\"],\"filter\":{\"type\":\"array\",\"pattern\":\"Email\"}}]}},{\"id\":\"email_vc_data\",\"name\":\"Email
          VC data\",\"purpose\":\"Check if data contains necessary
          fields\",\"constraints\":{\"fields\":[{\"path\":[\"$.credentialSubject.email\"],\"purpose\":\"Email
          address\",\"filter\":{\"type\":\"string\"}}]}}]}
        presentationDefinition: |-
          {
            "id": "vp_token_with_email_vc",
            "input_descriptors": [
              {
                "id": "email_vc",
                "name": "EmailVC type",
                "purpose": "Check if VC type iscorrect",
                "constraints": {
                  "fields": [
                    {
                      "path": ["$.type"],
                      "filter": { "type": "array", "pattern": "Email" }
                    }
                  ]
                }
              },
              {
                "id": "email_vc_data",
                "name": "EmailVC data",
                "purpose": "Check if data contains necessary fields",
                "constraints": {
                  "fields": [
                    {
                      "path": ["$.credentialSubject.email"],
                      "purpose": "Email address",
                      "filter": { "type": "string" }
                    }
                  ]
                }
              }
            ]
          }
        clientMetadata:
          name: insurance
          origin: https://insurance.com
          logo: https://insurance.com/logo.png
    UpdateLoginConfigurationOutput:
      $ref: '#/components/examples/ConfigurationObject'
    UpdateLoginConfigurationInput:
      value:
        name: Reference App Client
        idTokenMapping:
          - sourceField: $.type
            idTokenClaim: type
          - sourceField: $.credentialSubject.email
            idTokenClaim: email
          - sourceField: $.credentialSubject.data.score
            idTokenClaim: vp_score
          - sourceField: $.credentialSubject.data.like
            idTokenClaim: vp_likes
    ListLoginConfigurationOutput:
      value:
        configurations:
          - ari: ari:identity:...:28ed0f663884ff70bf3
            name: Reference App Client
            clientId: client-id here
            projectId: 8000c3a4-aa3b-4d14-9c9b-cddaa324c9e9
            creationDate: '2023-05-11T10:15:44Z'
            idTokenMapping:
              - sourceField: $.type
                idTokenClaim: type
              - sourceField: $.credentialSubject.email
                idTokenClaim: email
              - sourceField: $.credentialSubject.data.score
                idTokenClaim: vp_score
              - sourceField: $.credentialSubject.data.like
                idTokenClaim: vp_likes
            vpDefinition: >-
              {\"id\":\"vp_token_with_email_vc\",\"input_descriptors\":[{\"id\":\"email_vc\",\"name\":\"Email
              VC type\",\"purpose\":\"Check if VC type is
              correct\",\"constraints\":{\"fields\":[{\"path\":[\"$.type\"],\"filter\":{\"type\":\"array\",\"pattern\":\"Email\"}}]}},{\"id\":\"email_vc_data\",\"name\":\"Email
              VC data\",\"purpose\":\"Check if data contains necessary
              fields\",\"constraints\":{\"fields\":[{\"path\":[\"$.credentialSubject.email\"],\"purpose\":\"Email
              address\",\"filter\":{\"type\":\"string\"}}]}}]}
            presentationDefinition: |-
              { "id": "vp_token_with_email_vc", "input_descriptors": [
                {
                  "id": "email_vc",
                  "name": "EmailVC type",
                  "purpose": "Check if VC type iscorrect",
                  "constraints": {
                    "fields": [
                      {
                        "path": ["$.type"],
                        "filter": { "type": "array", "pattern": "Email" }
                      }
                    ]
                  }
                },
                {
                  "id": "email_vc_data",
                  "name": "EmailVC data",
                  "purpose": "Check if data contains necessary fields",
                  "constraints": {
                    "fields": [
                      {
                        "path": ["$.credentialSubject.email"],
                        "purpose": "Email address",
                        "filter": { "type": "string" }
                      }
                    ]
                  }
                }
              ] }
            id: c13de9cd6f19f28ed0f663884ff70bf3
            clientMetadata:
              name: insurance
              origin: https://insurance.com
              logo: https://insurance.com/logo.png
    RedirectResponse:
      value:
        type: REDIRECT_RESPONSE
        to: https://url-to-redirect-ro
    ConsentRequestOutputInfo:
      value:
        type: CONSENT_REQUEST_INFO
        user:
          subject: '4984389384938498349'
        client:
          id: 01b2c41a-b723-4fbf-a917-1280ac26f3ba
          name: client 1
          logoUri: https://logo.png
        requestedScopes:
          - ''
        consentChallenge: e1ef8c2b5cd74482b6812dafba81bcf9
paths:
  /v1/consent/request:
    get:
      operationId: consentRequest
      summary: IDP consent request automated by adapter frontend
      description: IDP consent request automated by adapter frontend
      parameters:
        - in: query
          name: consent_challenge
          schema:
            type: string
          description: Consent challenge provided by IDP
      responses:
        '200':
          description: Ok
        '307':
          description: 307 Temporary Redirect
          headers:
            Location:
              schema:
                type: string
      tags:
        - consent
  /v1/login/sessions/for-idp:
    post:
      operationId: loginSessionForIdp
      summary: Create Login Session for IDP Login
      description: Creates Login Session for IDP Login by using the Login Challenge
      requestBody:
        $ref: '#/components/requestBodies/LoginSessionForIdp'
      responses:
        '201':
          $ref: '#/components/responses/LoginSessionForIdp'
        '403':
          $ref: '#/components/responses/LoginSessionForIdpForbiddenError'
      tags:
        - session
    options:
      operationId: corsLoginSessionForIdp
      summary: CORS Support
      description: Enable CORS by returning correct headers
      x-amazon-apigateway-integration: &ref_3
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
      responses: &ref_4
        '200':
          $ref: '#/components/responses/CORSResponse'
      tags:
        - cors
  /v1/login/sessions/{sessionId}/accept-response:
    post:
      operationId: loginSessionAcceptResponse
      summary: Accept OIDC VP Response for Login Session
      description: Accepts and Validates the OIDC VP Response sent by the Wallet
      parameters:
        - description: The id of the login session
          in: path
          name: sessionId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/LoginSessionAcceptResponse'
      responses:
        '200':
          $ref: '#/components/responses/LoginSessionAcceptResponse'
        '400':
          $ref: '#/components/responses/LoginSessionAcceptResponseBadRequestError'
      tags:
        - session
    options:
      operationId: corsLoginSessionAcceptResponse
      summary: CORS Support
      description: Enable CORS by returning correct headers
      x-amazon-apigateway-integration: *ref_3
      parameters:
        - description: The id of the login session
          in: path
          name: sessionId
          required: true
          schema:
            type: string
            format: uuid
      responses: *ref_4
      tags:
        - cors
  /v1/login/sessions/{sessionId}/reject-response:
    post:
      operationId: loginSessionRejectResponse
      summary: Reject Response for Login Session
      description: The user declines the request for access to their data
      parameters:
        - description: The id of the login session
          in: path
          name: sessionId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/LoginSessionRejectResponse'
      responses:
        '200':
          $ref: '#/components/responses/LoginSessionRejectResponse'
      tags:
        - session
    options:
      operationId: corsLoginSessionRejectResponse
      summary: CORS Support
      description: Enable CORS by returning correct headers
      x-amazon-apigateway-integration: *ref_3
      parameters:
        - description: The id of the login session
          in: path
          name: sessionId
          required: true
          schema:
            type: string
            format: uuid
      responses: *ref_4
      tags:
        - cors
  /v1/login/configurations:
    get:
      operationId: listLoginConfigurations
      summary: List login configurations
      description: Endpoint to retrieve list of login configurations
      security:
        - ProjectTokenAuth: []
      responses:
        '200':
          $ref: '#/components/responses/ListLoginConfigurations'
        '400':
          $ref: '#/components/responses/ListLoginConfigurationsBadRequestError'
        '403':
          $ref: '#/components/responses/ListLoginConfigurationsForbiddenError'
      tags:
        - configuration
    post:
      operationId: createLoginConfigurations
      summary: Create a new login configuration
      description: >
        Create a new login configuration


        `vpDefinition` and `idTokenMapping` have default settings that provide
        user email VP presentation definitions.


        An essential default definition is in place when it comes to the login
        process for end users using the Chrome extension.


        This definition requires users to input their email address as OIDCVP
        compliant, which is then verified by the Affinidi verification service.
      security:
        - ProjectTokenAuth: []
      requestBody:
        $ref: '#/components/requestBodies/CreateLoginConfigurations'
      responses:
        '201':
          $ref: '#/components/responses/CreateLoginConfigurations'
        '400':
          $ref: '#/components/responses/CreateLoginConfigurationsBadRequestError'
        '403':
          $ref: '#/components/responses/CreateLoginConfigurationsForbiddenError'
        '424':
          $ref: >-
            #/components/responses/CreateLoginConfigurationsFailedDependencyError
      tags:
        - configuration
  /v1/login/configurations/{configurationId}:
    get:
      operationId: getLoginConfigurationsById
      summary: Get login configuration by ID
      description: Get login configuration by ID
      security:
        - ProjectTokenAuth: []
      parameters:
        - description: The id of the login configuration
          in: path
          name: configurationId
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/GetLoginConfigurationsById'
        '400':
          $ref: '#/components/responses/GetLoginConfigurationsByIdBadRequestError'
        '403':
          $ref: '#/components/responses/GetLoginConfigurationsByIdForbiddenError'
      tags:
        - configuration
    patch:
      operationId: updateLoginConfigurationsById
      summary: Update login configurations by ID
      description: Update login configurations by ID
      security:
        - ProjectTokenAuth: []
      parameters:
        - description: The id of the login configuration
          in: path
          name: configurationId
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateLoginConfigurationsById'
      responses:
        '200':
          $ref: '#/components/responses/UpdateLoginConfigurationsById'
        '400':
          $ref: '#/components/responses/UpdateLoginConfigurationsByIdBadRequestError'
        '403':
          $ref: '#/components/responses/UpdateLoginConfigurationsByIdForbiddenError'
      tags:
        - configuration
    delete:
      operationId: deleteLoginConfigurationsById
      summary: Delete login configurations by ID
      description: Delete login configurations by ID
      security:
        - ProjectTokenAuth: []
      parameters:
        - description: The id of the login configuration
          in: path
          name: configurationId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
        '400':
          $ref: '#/components/responses/DeleteLoginConfigurationsByIdBadRequestError'
        '403':
          $ref: '#/components/responses/DeleteLoginConfigurationsByIdForbiddenError'
      tags:
        - configuration
  /v1/login/configurations/metadata/{clientId}:
    get:
      operationId: getClientMetadataByClientId
      summary: Get Client Metadata By  OAuth 2.0 Client ID
      description: Get Client Metadata By  OAuth 2.0 Client ID
      security: []
      parameters:
        - description: OAuth 2.0 Client ID
          name: clientId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/GetClientMetadataByClientId'
        '400':
          $ref: '#/components/responses/GetClientMetadataByClientIdBadRequestError'
        '404':
          $ref: '#/components/responses/GetClientMetadataByClientIdNotFoundError'
      tags:
        - configuration
  /v1/groups:
    get:
      operationId: listGroups
      security:
        - ProjectTokenAuth: []
      responses:
        '200':
          $ref: '#/components/responses/ListGroups'
        '400':
          $ref: '#/components/responses/ListGroupsBadRequestError'
        '403':
          $ref: '#/components/responses/ListGroupsForbiddenError'
        '404':
          $ref: '#/components/responses/ListGroupsNotFoundError'
      tags:
        - group
    post:
      operationId: createGroup
      security:
        - ProjectTokenAuth: []
      requestBody:
        $ref: '#/components/requestBodies/CreateGroup'
      responses:
        '201':
          $ref: '#/components/responses/CreateGroup'
        '400':
          $ref: '#/components/responses/CreateGroupBadRequestError'
        '403':
          $ref: '#/components/responses/CreateGroupForbiddenError'
        '409':
          $ref: '#/components/responses/CreateGroupConflictError'
      tags:
        - group
  /v1/groups/{groupName}:
    get:
      operationId: getGroupById
      security:
        - ProjectTokenAuth: []
      parameters:
        - name: groupName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/GetGroupById'
        '400':
          $ref: '#/components/responses/GetGroupByIdBadRequestError'
        '403':
          $ref: '#/components/responses/GetGroupByIdForbiddenError'
        '404':
          $ref: '#/components/responses/GetGroupByIdNotFoundError'
      tags:
        - group
    delete:
      operationId: deleteGroup
      security:
        - ProjectTokenAuth: []
      parameters:
        - name: groupName
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NoContent
        '400':
          $ref: '#/components/responses/DeleteGroupBadRequestError'
        '403':
          $ref: '#/components/responses/DeleteGroupForbiddenError'
      tags:
        - group
  /v1/groups/{groupName}/users:
    get:
      operationId: listGroupUserMappings
      security:
        - ProjectTokenAuth: []
      parameters:
        - name: groupName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ListGroupUserMappings'
        '400':
          $ref: '#/components/responses/ListGroupUserMappingsBadRequestError'
        '403':
          $ref: '#/components/responses/ListGroupUserMappingsForbiddenError'
        '404':
          $ref: '#/components/responses/ListGroupUserMappingsNotFoundError'
      tags:
        - group
    post:
      operationId: addUserToGroup
      security:
        - ProjectTokenAuth: []
      parameters:
        - name: groupName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/AddUserToGroup'
      responses:
        '201':
          $ref: '#/components/responses/AddUserToGroup'
        '400':
          $ref: '#/components/responses/AddUserToGroupBadRequestError'
        '403':
          $ref: '#/components/responses/AddUserToGroupForbiddenError'
        '404':
          $ref: '#/components/responses/AddUserToGroupNotFoundError'
      tags:
        - group
    delete:
      operationId: removeUserFromGroup
      security:
        - ProjectTokenAuth: []
      parameters:
        - name: groupName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/RemoveUserFromGroup'
      responses:
        '204':
          description: NoContent
        '400':
          $ref: '#/components/responses/RemoveUserFromGroupBadRequestError'
        '403':
          $ref: '#/components/responses/RemoveUserFromGroupForbiddenError'
        '404':
          $ref: '#/components/responses/RemoveUserFromGroupNotFoundError'
      tags:
        - group
  /v1/login/admin/{proxy+}:
    get:
      x-amazon-apigateway-integration:
        requestParameters:
          integration.request.path.proxy: method.request.path.proxy
        cacheKeyParameters:
          - method.request.path.proxy
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http_proxy
      parameters:
        - name: proxy
          in: path
          required: true
          schema:
            type: string
    post:
      x-amazon-apigateway-integration:
        requestParameters:
          integration.request.path.proxy: method.request.path.proxy
        cacheKeyParameters:
          - method.request.path.proxy
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: http_proxy
      parameters:
        - name: proxy
          in: path
          required: true
          schema:
            type: string
    delete:
      x-amazon-apigateway-integration:
        requestParameters:
          integration.request.path.proxy: method.request.path.proxy
        cacheKeyParameters:
          - method.request.path.proxy
        passthroughBehavior: when_no_match
        httpMethod: DELETE
        type: http_proxy
      parameters:
        - name: proxy
          in: path
          required: true
          schema:
            type: string
    put:
      x-amazon-apigateway-integration:
        requestParameters:
          integration.request.path.proxy: method.request.path.proxy
        cacheKeyParameters:
          - method.request.path.proxy
        passthroughBehavior: when_no_match
        httpMethod: PUT
        type: http_proxy
      parameters:
        - name: proxy
          in: path
          required: true
          schema:
            type: string
    patch:
      x-amazon-apigateway-integration:
        requestParameters:
          integration.request.path.proxy: method.request.path.proxy
        cacheKeyParameters:
          - method.request.path.proxy
        passthroughBehavior: when_no_match
        httpMethod: PATCH
        type: http_proxy
      parameters:
        - name: proxy
          in: path
          required: true
          schema:
            type: string
  /v1/login/project/{projectId}/.well-known/jwks.json:
    get:
      summary: Discover Well-Known JSON Web Keys
      description: >-
        This endpoint returns JSON Web Keys required to verifying OpenID Connect
        ID Tokens and, if enabled, OAuth 2.0 JWT Access Tokens. This endpoint
        can be used with client libraries like node-jwks-rsa among others.
      x-amazon-apigateway-integration:
        requestParameters:
          integration.request.path.projectId: method.request.path.projectId
        cacheKeyParameters:
          - method.request.path.projectId
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http_proxy
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/JsonWebKeySet'
      tags:
        - idp
  /v1/login/project/{projectId}/.well-known/openid-configuration:
    get:
      summary: OpenID Connect Discovery
      description: >
        A mechanism for an OpenID Connect Relying Party to discover the
        End-User's  OpenID Provider and obtain information needed to interact
        with it, including  its OAuth 2.0 endpoint locations.
      x-amazon-apigateway-integration:
        requestParameters:
          integration.request.path.projectId: method.request.path.projectId
        cacheKeyParameters:
          - method.request.path.projectId
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http_proxy
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/OIDCConfiguration'
      tags:
        - idp
  /v1/login/project/{projectId}/oauth2/auth:
    get:
      summary: OAuth 2.0 Authorize Endpoint
      description: >
        The authorization endpoint is one of the components in the OAuth 2.0
        flow. It's the URL where a user is redirected to grant or deny access to
        their resources. When a user tries to access a service that requires
        OAuth 2.0 authorization, the application will redirect the user to this
        authorization endpoint. Here, the user can log in (if necessary) and
        then decide whether to grant the application access.
      x-amazon-apigateway-integration:
        requestParameters:
          integration.request.path.projectId: method.request.path.projectId
        cacheKeyParameters:
          - method.request.path.projectId
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http_proxy
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses: {}
      tags:
        - idp
  /v1/login/project/{projectId}/oauth2/revoke:
    post:
      summary: Revoke OAuth 2.0 Access or Refresh Token
      description: >
        Revoking a token (both access and refresh) means that the tokens will be
        invalid.  A revoked access token can no longer be used to make access
        requests, and a revoked  refresh token can no longer be used to refresh
        an access token. Revoking a refresh  token also invalidates the access
        token that was created with it. A token may only  be revoked by the
        client the token was generated for.
      x-amazon-apigateway-integration:
        cacheKeyParameters:
          - method.request.path.projectId
        requestParameters:
          integration.request.path.projectId: method.request.path.projectId
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: http_proxy
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
      tags:
        - idp
  /v1/login/project/{projectId}/oauth2/sessions/logout:
    get:
      summary: OpenID Connect Front- and Back-channel Enabled Logout
      description: >
        This endpoint initiates and completes user logout at the IdP OAuth2 &
        OpenID provider and initiates OpenID Connect Front- / Back-channel
        logout:

        https://openid.net/specs/openid-connect-frontchannel-1_0.html
        https://openid.net/specs/openid-connect-backchannel-1_0.html

        Back-channel logout is performed asynchronously and does not affect
        logout flow.
      x-amazon-apigateway-integration:
        requestParameters:
          integration.request.path.projectId: method.request.path.projectId
        cacheKeyParameters:
          - method.request.path.projectId
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http_proxy
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
      tags:
        - idp
  /v1/login/project/{projectId}/oauth2/token:
    post:
      summary: The OAuth 2.0 Token Endpoint
      description: >
        The token endpoint is a critical component in the OAuth 2.0 protocol.
        It's the URL where a client application makes a request to exchange an
        authorization grant (such as an authorization code) for an access token.
        After a user grants authorization at the authorization endpoint, the
        client application receives an authorization grant, which is then
        exchanged for an access token at the token endpoint. This access token
        is then used to access the user's resources on the protected server.
      x-amazon-apigateway-integration:
        cacheKeyParameters:
          - method.request.path.projectId
        requestParameters:
          integration.request.path.projectId: method.request.path.projectId
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: http_proxy
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/OAuth2Token'
      tags:
        - idp
  /v1/login/project/{projectId}/userinfo:
    get:
      summary: OpenID Connect Userinfo
      description: >
        This endpoint returns the payload of the ID Token,  including
        session.id_token values, of the provided  OAuth 2.0 Access Token's
        consent request.

        In the case of authentication error, a WWW-Authenticate  header might be
        set in the response with more information  about the error. See the spec
        for more details about  header format.
      x-amazon-apigateway-integration:
        requestParameters:
          integration.request.path.projectId: method.request.path.projectId
        cacheKeyParameters:
          - method.request.path.projectId
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: http_proxy
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/UserInfo'
      tags:
        - idp
